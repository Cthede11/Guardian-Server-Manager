# Multi-stage build for Guardian Server Manager Backend
FROM rust:1.75-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libsqlite3-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy Cargo files
COPY hostd/Cargo.toml hostd/Cargo.lock ./
COPY hostd/src ./src

# Build the application
RUN cargo build --release

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    libsqlite3-0 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r guardian && useradd -r -g guardian guardian

# Create application directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/target/release/hostd /app/hostd

# Copy configuration files
COPY hostd/data /app/data
COPY hostd/config /app/config

# Create necessary directories
RUN mkdir -p /app/logs /app/backups /app/servers && \
    chown -R guardian:guardian /app

# Switch to non-root user
USER guardian

# Expose port
EXPOSE 52100

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:52100/api/healthz || exit 1

# Set environment variables
ENV RUST_LOG=info
ENV DATABASE_URL=sqlite:data/guardian.db
ENV PORT=52100

# Run the application
CMD ["./hostd"]
