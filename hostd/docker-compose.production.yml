version: '3.8'

services:
  guardian:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: guardian-server-manager
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - guardian_data:/app/data
      - guardian_logs:/app/logs
      - guardian_servers:/app/servers
      - guardian_backups:/app/backups
      - ./configs:/app/configs:ro
    environment:
      - RUST_LOG=info
      - DATABASE_URL=sqlite:///app/data/guardian.db
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-here}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    depends_on:
      - redis
    networks:
      - guardian-network

  redis:
    image: redis:7-alpine
    container_name: guardian-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - guardian-network

  nginx:
    image: nginx:alpine
    container_name: guardian-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - guardian
    networks:
      - guardian-network

  prometheus:
    image: prom/prometheus:latest
    container_name: guardian-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - guardian-network

  grafana:
    image: grafana/grafana:latest
    container_name: guardian-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    depends_on:
      - prometheus
    networks:
      - guardian-network

volumes:
  guardian_data:
    driver: local
  guardian_logs:
    driver: local
  guardian_servers:
    driver: local
  guardian_backups:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  guardian-network:
    driver: bridge
